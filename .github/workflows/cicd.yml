name: CI/CD pipeline

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*.jar staging
      - name: Log in to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bookcrud-cicd-aws:test
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging/*.jar
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Package
          path: staging
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
         java-version: '17'
         distribution: 'temurin'
         cache: maven
      - name: Test with Maven
        run: mvn -B test --file pom.xml
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Package
          path: staging
      - name: Deploy to EC2
        uses: bitovi/github-actions-deploy-docker-to-ec2@v1.0.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_default_region: eu-north-1
          aws_elb_app_port: 8080
          aws_ec2_instance_type: t3.micro